// <auto-generated />
using System;
using MedicalEquipment_Sharing.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalEquipment_Sharing.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedicalEquipment_Sharing.Models.MedicalEquipment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Describe");

                    b.Property<string>("ImageUrl");

                    b.Property<int>("Manufacturer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<decimal>("OriginalPrice");

                    b.Property<decimal>("Price");

                    b.Property<decimal>("SoldPrice");

                    b.Property<int>("Type");

                    b.Property<string>("UserEmail")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MedicalEquipments");
                });

            modelBuilder.Entity("MedicalEquipment_Sharing.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerEmail")
                        .IsRequired();

                    b.Property<string>("DepositOrderNum");

                    b.Property<long>("EquipmentId");

                    b.Property<bool>("PayDepositSuccess");

                    b.Property<string>("PayOrderNum");

                    b.Property<bool>("PaySuccess");

                    b.Property<DateTime>("RevertedDate");

                    b.Property<string>("SellerEmail")
                        .IsRequired();

                    b.Property<DateTime>("SoldDate");

                    b.Property<int>("State");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MedicalEquipment_Sharing.Models.PayOrder", b =>
                {
                    b.Property<string>("OrderNum")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired();

                    b.Property<decimal>("Amount");

                    b.Property<int>("OrderType");

                    b.Property<bool>("PaySuccess");

                    b.HasKey("OrderNum");

                    b.ToTable("PayOrders");
                });

            modelBuilder.Entity("MedicalEquipment_Sharing.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Income");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("TelePhone")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Email");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
